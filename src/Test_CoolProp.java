
public class Test_CoolProp {
    static {
        System.loadLibrary("CoolProp");
    }

    public static void main(String argv[]){
        System.out.println("**************** INFORMATION ***************");
        //System.out.println("CoolProp version:" + " " + CoolProp.get_global_param_string("version"));
	/*
        System.out.println("**************** INFORMATION ***************");
        System.out.println("This example was auto-generated by the language-agnostic dev/scripts/example_generator.py script written by Ian Bell");
        System.out.println("CoolProp version:" + " " + CoolProp.get_global_param_string("version"));
        System.out.println("CoolProp gitrevision:" + " " + CoolProp.get_global_param_string("gitrevision"));
        System.out.println("CoolProp Fluids:" + " " + CoolProp.get_global_param_string("FluidsList"));
        // See http://www.coolprop.org/coolprop/HighLevelAPI.html#table-of-string-inputs-to-propssi-function for a list of inputs to high-level interface;
        System.out.println("*********** HIGH LEVEL INTERFACE *****************");
        System.out.println("Critical temperature of water:" + " " + CoolProp.Props1SI("Water", "Tcrit") + " " + "K");
        System.out.println("Boiling temperature of water at 101325 Pa:" + " " + CoolProp.PropsSI("T", "P", 101325, "Q", 0, "Water") + " " + "K");
        System.out.println("Phase of water at 101325 Pa and 300 K:" + " " + CoolProp.PhaseSI("P", 101325, "Q", 0, "Water"));
        System.out.println("c_p of water at 101325 Pa and 300 K:" + " " + CoolProp.PropsSI("C", "P", 101325, "T", 300, "Water") + " " + "J/kg/K");
        System.out.println("c_p of water (using derivatives) at 101325 Pa and 300 K:" + " " + CoolProp.PropsSI("d(H)/d(T)|P", "P", 101325, "T", 300, "Water") + " " + "J/kg/K");
        System.out.println("*********** HUMID AIR PROPERTIES *****************");
        System.out.println("Humidity ratio of 50% rel. hum. air at 300 K, 101325 Pa:" + " " + CoolProp.HAPropsSI("W", "T", 300, "P", 101325, "R", 0.5) + " " + "kg_w/kg_da");
        System.out.println("Relative humidity from last calculation:" + " " + CoolProp.HAPropsSI("R", "T", 300, "P", 101325, "W", CoolProp.HAPropsSI("W", "T", 300, "P", 101325, "R", 0.5)) + " " + "(fractional)");
        System.out.println("*********** INCOMPRESSIBLE FLUID AND BRINES *****************");
        System.out.println("Density of 50% (mass) ethylene glycol/water at 300 K, 101325 Pa:" + " " + CoolProp.PropsSI("D", "T", 300, "P", 101325, "INCOMP::MEG-50%") + " " + "kg/m^3");
        System.out.println("Viscosity of Therminol D12 at 350 K, 101325 Pa:" + " " + CoolProp.PropsSI("V", "T", 350, "P", 101325, "INCOMP::TD12") + " " + "Pa-s");
        // If you don't have REFPROP installed, disable the following lines;
        System.out.println("*********** REFPROP *****************");
        System.out.println("Critical temperature of water:" + " " + CoolProp.Props1SI("REFPROP::Water", "Tcrit") + " " + "K");
        System.out.println("Boiling temperature of water at 101325 Pa:" + " " + CoolProp.PropsSI("T", "P", 101325, "Q", 0, "REFPROP::Water") + " " + "K");
        System.out.println("c_p of water at 101325 Pa and 300 K:" + " " + CoolProp.PropsSI("C", "P", 101325, "T", 300, "REFPROP::Water") + " " + "J/kg/K");
        System.out.println("*********** TABULAR BACKENDS *****************");
        AbstractState TAB = AbstractState.factory("BICUBIC&HEOS", "R245fa");
        TAB.update(input_pairs.PT_INPUTS, 101325, 300);
        System.out.println("Mass density of refrigerant R245fa at 300 K, 101325 Pa:" + " " + TAB.rhomass() + " " + "kg/m^3");
        System.out.println("*********** SATURATION DERIVATIVES (LOW-LEVEL INTERFACE) ***************");
        AbstractState AS_SAT = AbstractState.factory("HEOS", "R245fa");
        AS_SAT.update(input_pairs.PQ_INPUTS, 101325, 0);
        System.out.println("First saturation derivative:" + " " + AS_SAT.first_saturation_deriv(parameters.iP, parameters.iT) + " " + "Pa/K");
        System.out.println("*********** LOW-LEVEL INTERFACE *****************");
        AbstractState AS = AbstractState.factory("HEOS", "Water&Ethanol");
        DoubleVector z = new DoubleVector(); z.add(0.5); z.add(0.5);;
        AS.set_mole_fractions(z);
        AS.update(input_pairs.PQ_INPUTS, 101325, 1);
        System.out.println("Normal boiling point temperature of water and ethanol:" + " " + AS.T() + " " + "K");
        // If you don't have REFPROP installed, disable the following block;
        System.out.println("*********** LOW-LEVEL INTERFACE (REFPROP) *****************");
        AbstractState AS2 = AbstractState.factory("REFPROP", "Methane&Ethane");
        DoubleVector z2 = new DoubleVector(); z2.add(0.2); z2.add(0.8);;
        AS2.set_mole_fractions(z2);
        AS2.update(input_pairs.QT_INPUTS, 1, 120);
        System.out.println("Vapor molar density:" + " " + AS2.keyed_output(parameters.iDmolar) + " " + "mol/m^3");
		*/
    }
}